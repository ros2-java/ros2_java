name: CI

on: [push, pull_request]

jobs:
  build_and_test:
    runs-on: ubuntu-18.04
    steps:
    - name: Install Java
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y default-jdk
    - uses: ros-tooling/setup-ros@0.0.14
      with:
        required-ros-distributions: dashing
    - uses: ros-tooling/action-ros-ci@8d58122
      with:
        package-name: rosidl_generator_java rcljava_common rcljava
        source-ros-binary-installation: dashing
        vcs-repo-file-url: https://raw.githubusercontent.com/ros2-java/ros2_java/dashing/ros2_java_desktop.repos

  build_android:
    runs-on: ubuntu-18.04
    steps:
    - name: Install Java
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y default-jdk
    - name: Setup locale for ROS 2
      run: |
        sudo locale-gen en_US en_US.UTF-8
        sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
        export LANG=en_US.UTF-8
    - name: Setup sources for ROS 2
      run: |
        sudo apt-get update && sudo apt-get install -y curl gnupg2 lsb-release
        curl -sL https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=$(dpkg --print-architecture)] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros2-latest.list'
    - name: Install colcon
      run: |
        sudo apt-get update && sudo apt-get install -y python3-colcon-common-extensions python3-vcstool
    - name: Fetch VCS repo file
      run: |
        mkdir -p ros2_java_ws/src
        cd ros2_java_ws
        curl -sL https://raw.githubusercontent.com/ros2-java/ros2_java/jacob/android_instructions/ros2_java_android.repos | vcs import src
    - name: Install Android NDK
      run: |
        curl -LO https://dl.google.com/android/repository/android-ndk-r21d-linux-x86_64.zip
        unzip android-ndk-r21d-linux-x86_64.zip
    - name: Build ros2_java for Android
      run: |
        export PYTHON3_EXEC="$( which python3 )"
        export ANDROID_ABI=armeabi-v7a
        export ANDROID_NATIVE_API_LEVEL=android-21
        export ANDROID_TOOLCHAIN_NAME=arm-linux-androideabi-clang
        export ANDROID_NDK=${PWD}/android-ndk-r21d

        cd ros2_java_ws
        colcon build \
          --packages-skip test_msgs \
          --packages-up-to rcljava \
          --cmake-args \
          -DPYTHON_EXECUTABLE=${PYTHON3_EXEC} \
          -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK}/build/cmake/android.toolchain.cmake \
          -DANDROID_FUNCTION_LEVEL_LINKING=OFF \
          -DANDROID_NATIVE_API_LEVEL=${ANDROID_NATIVE_API_LEVEL} \
          -DANDROID_TOOLCHAIN_NAME=${ANDROID_TOOLCHAIN_NAME} \
          -DANDROID_STL=c++_shared \
          -DANDROID_ABI=${ANDROID_ABI} \
          -DANDROID_NDK=${ANDROID_NDK} \
          -DTHIRDPARTY=ON \
          -DCOMPILE_EXAMPLES=OFF \
          -DCMAKE_FIND_ROOT_PATH="${PWD}/install"
